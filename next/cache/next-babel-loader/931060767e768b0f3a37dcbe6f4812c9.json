{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport { withRouter } from 'next/router';\nimport client from \"../components/ApolloClient\";\nimport gql from 'graphql-tag';\nimport AddToCartButton from \"../components/cart/AddToCartButton\";\nconst Product = withRouter(props => {\n  const {\n    product\n  } = props;\n  return __jsx(Layout, null, product ? __jsx(\"div\", {\n    className: \"woo-next-single\"\n  }, __jsx(\"div\", {\n    className: \"woo-next-single__product card bg-light mb-3 p-5\"\n  }, __jsx(\"div\", {\n    className: \"card-header\"\n  }, product.name), __jsx(\"div\", {\n    className: \"card-body\"\n  }, __jsx(\"h4\", {\n    className: \"card-title\"\n  }, product.name), __jsx(\"img\", {\n    src: product.image.sourceUrl,\n    alt: \"Product Image\",\n    width: \"200\",\n    srcSet: product.image.srcSet\n  }), __jsx(\"p\", {\n    className: \"card-text\"\n  }, product.description), __jsx(AddToCartButton, {\n    product: product\n  })))) : '');\n});\n\nProduct.getInitialProps = async function (context) {\n  console.warn(context);\n  let {\n    query: {\n      slug\n    }\n  } = context;\n  const id = slug ? parseInt(slug.split('-').pop()) : context.query.id;\n  const PRODUCT_QUERY = gql` query Product( $id: Int ! ) {\n\t\t\tproductBy( productId: $id ) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tproductId\n\t\t\t\t\t\t\taverageRating\n\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\turi\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tsrcSet\n\t\t\t\t\t\t\t\tsourceUrl\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t  ... on SimpleProduct {\n\t\t\t\t\t        price\n\t\t\t\t\t        id\n\t\t\t\t\t      }\n\t\t\t\t\t      ... on VariableProduct {\n\t\t\t\t\t        price\n\t\t\t\t\t        id\n\t\t\t\t\t      }\n\t\t\t\t\t      ... on ExternalProduct {\n\t\t\t\t\t        price\n\t\t\t\t\t        id\n\t\t\t\t\t      }\n\t\t\t\t\t      ... on GroupProduct {\n\t\t\t\t\t        products {\n\t\t\t\t\t          nodes {\n\t\t\t\t\t            ... on SimpleProduct {\n\t\t\t\t\t              price\n\t\t\t\t\t            }\n\t\t\t\t\t          }\n\t\t\t\t\t        }\n\t\t\t\t\t        id\n\t\t\t\t\t      }\n\t\t\t\t\t    }\n\n\t\t\t\t\n\t\t\t\n\t }`;\n  const res = await client.query({\n    query: PRODUCT_QUERY,\n    variables: {\n      id\n    }\n  });\n  return {\n    product: res.data.productBy\n  };\n};\n\nexport default Product;","map":null,"metadata":{},"sourceType":"module"}