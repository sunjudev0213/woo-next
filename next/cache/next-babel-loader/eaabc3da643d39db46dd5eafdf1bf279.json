{"ast":null,"code":"import fetch from 'node-fetch';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';\nimport introspectionQueryResultData from '../fragmentTypes';\nimport clientConfig from './../client-config'; // Fragment matcher.\n\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n  introspectionQueryResultData\n}); // Apollo GraphQL client.\n\nconst client = new ApolloClient({\n  link: createHttpLink({\n    uri: clientConfig.graphqlUrl,\n    fetch: fetch\n  }),\n  cache: new InMemoryCache({\n    fragmentMatcher\n  })\n});\nexport default client;","map":{"version":3,"sources":["/Users/imransayed/Projects/woo-next/components/ApolloClient.js"],"names":["fetch","ApolloClient","InMemoryCache","createHttpLink","IntrospectionFragmentMatcher","introspectionQueryResultData","clientConfig","fragmentMatcher","client","link","uri","graphqlUrl","cache"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,SAASC,4BAAT,QAA6C,uBAA7C;AACA,OAAOC,4BAAP,MAAyC,kBAAzC;AAEA,OAAOC,YAAP,MAAyB,oBAAzB,C,CAEA;;AACA,MAAMC,eAAe,GAAG,IAAIH,4BAAJ,CAAiC;AACxDC,EAAAA;AADwD,CAAjC,CAAxB,C,CAIA;;AACA,MAAMG,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC/BQ,EAAAA,IAAI,EAAEN,cAAc,CAAC;AACpBO,IAAAA,GAAG,EAAEJ,YAAY,CAACK,UADE;AAEpBX,IAAAA,KAAK,EAAEA;AAFa,GAAD,CADW;AAK/BY,EAAAA,KAAK,EAAE,IAAIV,aAAJ,CAAmB;AAAEK,IAAAA;AAAF,GAAnB;AALwB,CAAjB,CAAf;AAQA,eAAeC,MAAf","sourcesContent":["import fetch from 'node-fetch';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\n\nimport { IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';\nimport introspectionQueryResultData from '../fragmentTypes';\n\nimport clientConfig from './../client-config';\n\n// Fragment matcher.\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n\tintrospectionQueryResultData\n});\n\n// Apollo GraphQL client.\nconst client = new ApolloClient({\n\tlink: createHttpLink({\n\t\turi: clientConfig.graphqlUrl,\n\t\tfetch: fetch\n\t}),\n\tcache: new InMemoryCache( { fragmentMatcher } ),\n});\n\nexport default client;\n"]},"metadata":{},"sourceType":"module"}