{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/Users/imransayed/Projects/woo-next/pages/product.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\" query Product( $id: Int ! ) {\\n\\t\\t\\tproductBy( productId: $id ) {\\n\\t\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t\\t\\tproductId\\n\\t\\t\\t\\t\\t\\t\\taverageRating\\n\\t\\t\\t\\t\\t\\t\\tslug\\n\\t\\t\\t\\t\\t\\t\\tdescription\\n\\t\\t\\t\\t\\t\\t\\timage {\\n\\t\\t\\t\\t\\t\\t\\t\\turi\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\t\\t\\t\\tsrcSet\\n\\t\\t\\t\\t\\t\\t\\t\\tsourceUrl\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tname\\n\\t\\t\\t\\t\\t\\t  ... on SimpleProduct {\\n\\t\\t\\t\\t\\t        price\\n\\t\\t\\t\\t\\t        id\\n\\t\\t\\t\\t\\t      }\\n\\t\\t\\t\\t\\t      ... on VariableProduct {\\n\\t\\t\\t\\t\\t        price\\n\\t\\t\\t\\t\\t        id\\n\\t\\t\\t\\t\\t      }\\n\\t\\t\\t\\t\\t      ... on ExternalProduct {\\n\\t\\t\\t\\t\\t        price\\n\\t\\t\\t\\t\\t        id\\n\\t\\t\\t\\t\\t      }\\n\\t\\t\\t\\t\\t      ... on GroupProduct {\\n\\t\\t\\t\\t\\t        products {\\n\\t\\t\\t\\t\\t          nodes {\\n\\t\\t\\t\\t\\t            ... on SimpleProduct {\\n\\t\\t\\t\\t\\t              price\\n\\t\\t\\t\\t\\t            }\\n\\t\\t\\t\\t\\t          }\\n\\t\\t\\t\\t\\t        }\\n\\t\\t\\t\\t\\t        id\\n\\t\\t\\t\\t\\t      }\\n\\t\\t\\t\\t\\t    }\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from \"../components/Layout\";\nimport { withRouter } from 'next/router';\nimport client from \"../components/ApolloClient\";\nimport gql from 'graphql-tag';\nimport AddToCartButton from \"../components/cart/AddToCartButton\";\nvar Product = withRouter(function (props) {\n  var product = props.product;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, product ? __jsx(\"div\", {\n    className: \"woo-next-single\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"woo-next-single__product card bg-light mb-3 p-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, product.name), __jsx(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, product.name), __jsx(\"img\", {\n    src: product.image.sourceUrl,\n    alt: \"Product Image\",\n    width: \"200\",\n    srcSet: product.image.srcSet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, product.description), __jsx(AddToCartButton, {\n    product: product,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })))) : '');\n});\n\nProduct.getInitialProps = function _callee(context) {\n  var slug, id, PRODUCT_QUERY, res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.warn(context);\n          slug = context.query.slug;\n          id = slug ? _parseInt(slug.split('-').pop()) : context.query.id;\n          PRODUCT_QUERY = gql(_templateObject());\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(client.query({\n            query: PRODUCT_QUERY,\n            variables: {\n              id: id\n            }\n          }));\n\n        case 6:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            product: res.data.productBy\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/imransayed/Projects/woo-next/pages/product.js"],"names":["Layout","withRouter","client","gql","AddToCartButton","Product","props","product","name","image","sourceUrl","srcSet","description","getInitialProps","context","console","warn","slug","query","id","split","pop","PRODUCT_QUERY","variables","res","data","productBy"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AAEA,IAAMC,OAAO,GAAGJ,UAAU,CAAE,UAAAK,KAAK,EAAI;AAAA,MAE5BC,OAF4B,GAEhBD,KAFgB,CAE5BC,OAF4B;AAIpC,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GACR;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,OAAO,CAACC,IAAvC,CADD,EAEC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BD,OAAO,CAACC,IAArC,CADD,EAEC;AAAK,IAAA,GAAG,EAAGD,OAAO,CAACE,KAAR,CAAcC,SAAzB;AAAqC,IAAA,GAAG,EAAC,eAAzC;AAAyD,IAAA,KAAK,EAAC,KAA/D;AAAqE,IAAA,MAAM,EAAGH,OAAO,CAACE,KAAR,CAAcE,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BJ,OAAO,CAACK,WAAnC,CAHD,EAIC,MAAC,eAAD;AAAiB,IAAA,OAAO,EAAGL,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CAFD,CADD,CADQ,GAYL,EAbL,CADD;AAiBA,CArByB,CAA1B;;AAuBAF,OAAO,CAACQ,eAAR,GAA0B,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzBC,UAAAA,OAAO,CAACC,IAAR,CAAcF,OAAd;AAEeG,UAAAA,IAJU,GAICH,OAJD,CAInBI,KAJmB,CAIVD,IAJU;AAKnBE,UAAAA,EALmB,GAKdF,IAAI,GAAG,UAAUA,IAAI,CAACG,KAAL,CAAY,GAAZ,EAAkBC,GAAlB,EAAV,CAAH,GAAyCP,OAAO,CAACI,KAAR,CAAcC,EAL7C;AAOnBG,UAAAA,aAPmB,GAOHnB,GAPG;AAAA;AAAA,2CAiDPD,MAAM,CAACgB,KAAP,CAAc;AAC/BA,YAAAA,KAAK,EAAEI,aADwB;AAE/BC,YAAAA,SAAS,EAAE;AAAEJ,cAAAA,EAAE,EAAFA;AAAF;AAFoB,WAAd,CAjDO;;AAAA;AAiDnBK,UAAAA,GAjDmB;AAAA,2CAsDlB;AACNjB,YAAAA,OAAO,EAAEiB,GAAG,CAACC,IAAJ,CAASC;AADZ,WAtDkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AA4DA,eAAerB,OAAf","sourcesContent":["import Layout from \"../components/Layout\";\nimport { withRouter } from 'next/router';\nimport client from \"../components/ApolloClient\";\nimport gql from 'graphql-tag';\nimport AddToCartButton from \"../components/cart/AddToCartButton\";\n\nconst Product = withRouter( props => {\n\n\tconst { product } = props;\n\n\treturn (\n\t\t<Layout>\n\t\t\t{ product ? (\n\t\t\t\t<div className=\"woo-next-single\">\n\t\t\t\t\t<div className=\"woo-next-single__product card bg-light mb-3 p-5\">\n\t\t\t\t\t\t<div className=\"card-header\">{ product.name }</div>\n\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t<h4 className=\"card-title\">{ product.name }</h4>\n\t\t\t\t\t\t\t<img src={ product.image.sourceUrl } alt=\"Product Image\" width=\"200\" srcSet={ product.image.srcSet }/>\n\t\t\t\t\t\t\t<p className=\"card-text\">{ product.description }</p>\n\t\t\t\t\t\t\t<AddToCartButton product={ product }/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : '' }\n\t\t</Layout>\n\t)\n});\n\nProduct.getInitialProps = async function( context ) {\n\n\tconsole.warn( context );\n\n\tlet { query: { slug } } = context;\n\tconst id = slug ? parseInt( slug.split( '-' ).pop() ) : context.query.id;\n\n\tconst PRODUCT_QUERY = gql` query Product( $id: Int ! ) {\n\t\t\tproductBy( productId: $id ) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tproductId\n\t\t\t\t\t\t\taverageRating\n\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\turi\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tsrcSet\n\t\t\t\t\t\t\t\tsourceUrl\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t  ... on SimpleProduct {\n\t\t\t\t\t        price\n\t\t\t\t\t        id\n\t\t\t\t\t      }\n\t\t\t\t\t      ... on VariableProduct {\n\t\t\t\t\t        price\n\t\t\t\t\t        id\n\t\t\t\t\t      }\n\t\t\t\t\t      ... on ExternalProduct {\n\t\t\t\t\t        price\n\t\t\t\t\t        id\n\t\t\t\t\t      }\n\t\t\t\t\t      ... on GroupProduct {\n\t\t\t\t\t        products {\n\t\t\t\t\t          nodes {\n\t\t\t\t\t            ... on SimpleProduct {\n\t\t\t\t\t              price\n\t\t\t\t\t            }\n\t\t\t\t\t          }\n\t\t\t\t\t        }\n\t\t\t\t\t        id\n\t\t\t\t\t      }\n\t\t\t\t\t    }\n\n\t\t\t\t\n\t\t\t\n\t }`;\n\n\tconst res = await client.query(({\n\t\tquery: PRODUCT_QUERY,\n\t\tvariables: { id }\n\t}));\n\n\treturn {\n\t\tproduct: res.data.productBy\n\t}\n\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}