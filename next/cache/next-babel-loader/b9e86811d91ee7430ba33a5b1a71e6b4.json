{"ast":null,"code":"var _jsxFileName = \"/Users/imransayed/Projects/woo-next/components/cart/AddToCartButton.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from 'react';\nimport { AppContext } from \"../context/AppContext\";\nimport { addFirstProduct, updateCart } from \"../../functions\";\nimport Link from 'next/link';\n\nvar AddToCartButton = function AddToCartButton(props) {\n  var product = props.product;\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext[0],\n      setCart = _useContext[1];\n\n  var _useState = useState(false),\n      showViewCart = _useState[0],\n      setShowViewCart = _useState[1];\n  /**\n   * Handles adding items to the cart.\n   *\n   * @return {void}\n   */\n\n\n  var handleAddToCartClick = function handleAddToCartClick() {\n    // If component is rendered client side.\n    if (true) {\n      var existingCart = localStorage.getItem('woo-next-cart'); // If cart has item(s) already, update existing or add new item.\n\n      if (existingCart) {\n        existingCart = JSON.parse(existingCart);\n        var qtyToBeAdded = 1;\n        var updatedCart = updateCart(existingCart, product, qtyToBeAdded);\n        setCart(updatedCart);\n      } else {\n        /**\n         * If No Items in the cart, create an empty array and add one.\n         * @type {Array}\n         */\n        var newCart = addFirstProduct(product);\n        setCart(newCart);\n      } // Show View Cart Button\n\n\n      setShowViewCart(true);\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: handleAddToCartClick,\n    className: \"btn btn-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Add to cart\"), showViewCart ? __jsx(Link, {\n    href: \"/cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"woo-next-view-cart-btn btn btn-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"View Cart\")) : '');\n};\n\nexport default AddToCartButton;","map":{"version":3,"sources":["/Users/imransayed/Projects/woo-next/components/cart/AddToCartButton.js"],"names":["useState","useContext","AppContext","addFirstProduct","updateCart","Link","AddToCartButton","props","product","cart","setCart","showViewCart","setShowViewCart","handleAddToCartClick","existingCart","localStorage","getItem","JSON","parse","qtyToBeAdded","updatedCart","newCart"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,iBAA5C;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAEC,KAAF,EAAa;AAAA,MAE5BC,OAF4B,GAEhBD,KAFgB,CAE5BC,OAF4B;;AAAA,oBAGVP,UAAU,CAAEC,UAAF,CAHA;AAAA,MAG5BO,IAH4B;AAAA,MAGtBC,OAHsB;;AAAA,kBAIMV,QAAQ,CAAE,KAAF,CAJd;AAAA,MAI5BW,YAJ4B;AAAA,MAIdC,eAJc;AAMpC;;;;;;;AAKA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAElC;AACA,cAAuB;AAEtB,UAAIC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAsB,eAAtB,CAAnB,CAFsB,CAItB;;AACA,UAAKF,YAAL,EAAoB;AAEnBA,QAAAA,YAAY,GAAGG,IAAI,CAACC,KAAL,CAAYJ,YAAZ,CAAf;AAEA,YAAMK,YAAY,GAAG,CAArB;AAEA,YAAMC,WAAW,GAAGhB,UAAU,CAAEU,YAAF,EAAgBN,OAAhB,EAAyBW,YAAzB,CAA9B;AAEAT,QAAAA,OAAO,CAAEU,WAAF,CAAP;AAEA,OAVD,MAUO;AACN;;;;AAIA,YAAMC,OAAO,GAAGlB,eAAe,CAAEK,OAAF,CAA/B;AACAE,QAAAA,OAAO,CAAEW,OAAF,CAAP;AACA,OAtBqB,CAwBtB;;;AACAT,MAAAA,eAAe,CAAE,IAAF,CAAf;AACA;AACD,GA9BD;;AAgCA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAQ,IAAA,OAAO,EAAGC,oBAAlB;AAAyC,IAAA,SAAS,EAAC,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEGF,YAAY,GACb,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmB;AAAQ,IAAA,SAAS,EAAC,0CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnB,CADa,GAEV,EAJL,CADD;AASA,CApDD;;AAsDA,eAAeL,eAAf","sourcesContent":["import { useState, useContext } from 'react';\nimport { AppContext } from \"../context/AppContext\";\nimport { addFirstProduct, updateCart } from \"../../functions\";\nimport Link from 'next/link';\n\nconst AddToCartButton = ( props ) => {\n\n\tconst { product } = props;\n\tconst [ cart, setCart ] = useContext( AppContext );\n\tconst [ showViewCart, setShowViewCart ] = useState( false );\n\n\t/**\n\t * Handles adding items to the cart.\n\t *\n\t * @return {void}\n\t */\n\tconst handleAddToCartClick = () => {\n\n\t\t// If component is rendered client side.\n\t\tif ( process.browser ) {\n\n\t\t\tlet existingCart = localStorage.getItem( 'woo-next-cart' );\n\n\t\t\t// If cart has item(s) already, update existing or add new item.\n\t\t\tif ( existingCart ) {\n\n\t\t\t\texistingCart = JSON.parse( existingCart );\n\n\t\t\t\tconst qtyToBeAdded = 1;\n\n\t\t\t\tconst updatedCart = updateCart( existingCart, product, qtyToBeAdded );\n\n\t\t\t\tsetCart( updatedCart );\n\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * If No Items in the cart, create an empty array and add one.\n\t\t\t\t * @type {Array}\n\t\t\t\t */\n\t\t\t\tconst newCart = addFirstProduct( product );\n\t\t\t\tsetCart( newCart );\n\t\t\t}\n\n\t\t\t// Show View Cart Button\n\t\t\tsetShowViewCart( true )\n\t\t}\n\t};\n\n\treturn(\n\t\t<React.Fragment>\n\t\t\t<button onClick={ handleAddToCartClick } className=\"btn btn-secondary\">Add to cart</button>\n\t\t\t{ showViewCart ? (\n\t\t\t\t<Link href=\"/cart\"><button className=\"woo-next-view-cart-btn btn btn-secondary\">View Cart</button></Link>\n\t\t\t) : '' }\n\n\t\t</React.Fragment>\n\t)\n};\n\nexport default AddToCartButton;\n"]},"metadata":{},"sourceType":"module"}