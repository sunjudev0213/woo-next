{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport { withRouter } from 'next/router';\nimport client from \"../components/ApolloClient\";\nimport gql from 'graphql-tag';\nimport Product from \"../components/Product\";\nconst PRODUCT_BY_CATEGORY_ID = gql` query Product_Category( $id: ID ! ) {\n\t\t\tproductCategory( id: $id ) {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tproducts {\n\t\t\t\t\t\t\t  edges {\n\t\t\t\t\t\t\t    node {\n\t\t\t\t\t\t\t        id\n\t\t\t\t\t\t\t\t\tproductId\n\t\t\t\t\t\t\t\t\taverageRating\n\t\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\t\t\t\turi\n\t\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\t\tsrcSet\n\t\t\t\t\t\t\t\t\t\t\tsourceUrl\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\tprice\n\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t  }\n\t\t\t\t\t}\n\n\t\t\t}\n\t }`;\nconst Category = withRouter(props => {\n  const {\n    categoryName,\n    products\n  } = props;\n  return __jsx(Layout, null, categoryName ? __jsx(\"h3\", {\n    className: \"product-container pl-5\"\n  }, categoryName) : '', __jsx(\"div\", {\n    className: \"product-container row\"\n  }, undefined !== products && products.length ? products.map(product => __jsx(Product, {\n    key: product.node.id,\n    product: product.node\n  })) : ''));\n});\n\nCategory.getInitialProps = async function (context) {\n  let {\n    query: {\n      slug\n    }\n  } = context;\n  const id = slug ? slug.split('-').pop() : context.query.id;\n  const res = await client.query({\n    query: PRODUCT_BY_CATEGORY_ID,\n    variables: {\n      id\n    }\n  });\n  return {\n    categoryName: res.data.productCategory.name,\n    products: res.data.productCategory.products.edges\n  };\n};\n\nexport default Category;","map":null,"metadata":{},"sourceType":"module"}