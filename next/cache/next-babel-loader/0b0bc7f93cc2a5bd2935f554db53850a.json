{"ast":null,"code":"var _jsxFileName = \"/Users/imransayed/Projects/woo-next/pages/category.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport { withRouter } from 'next/router';\nimport client from \"../components/ApolloClient\";\nimport gql from 'graphql-tag';\nimport Product from \"../components/Product\";\nconst PRODUCT_BY_CATEGORY_ID = gql` query Product_Category( $id: ID ! ) {\n\t\t\tproductCategory( id: $id ) {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tproducts {\n\t\t\t\t\t\t\t  edges {\n\t\t\t\t\t\t\t    node {\n\t\t\t\t\t\t\t        id\n\t\t\t\t\t\t\t\t\tproductId\n\t\t\t\t\t\t\t\t\taverageRating\n\t\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\t\t\t\turi\n\t\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\t\tsrcSet\n\t\t\t\t\t\t\t\t\t\t\tsourceUrl\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\tprice\n\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t  }\n\t\t\t\t\t}\n\n\t\t\t}\n\t }`;\nconst Category = withRouter(props => {\n  const {\n    categoryName,\n    products\n  } = props;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, categoryName ? __jsx(\"h3\", {\n    className: \"product-container pl-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, categoryName) : '', __jsx(\"div\", {\n    className: \"product-container row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, undefined !== products && products.length ? products.map(product => __jsx(Product, {\n    key: product.node.id,\n    product: product.node,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })) : ''));\n});\n\nCategory.getInitialProps = async function (context) {\n  let {\n    query: {\n      slug\n    }\n  } = context;\n  const id = slug ? slug.split('-').pop() : context.query.id;\n  const res = await client.query({\n    query: PRODUCT_BY_CATEGORY_ID,\n    variables: {\n      id\n    }\n  });\n  return {\n    categoryName: res.data.productCategory.name,\n    products: res.data.productCategory.products.edges\n  };\n};\n\nexport default Category;","map":{"version":3,"sources":["/Users/imransayed/Projects/woo-next/pages/category.js"],"names":["Layout","withRouter","client","gql","Product","PRODUCT_BY_CATEGORY_ID","Category","props","categoryName","products","undefined","length","map","product","node","id","getInitialProps","context","query","slug","split","pop","res","variables","data","productCategory","name","edges"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,MAAMC,sBAAsB,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;IAAnC;AA0BA,MAAMG,QAAQ,GAAGL,UAAU,CAAEM,KAAK,IAAI;AAErC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA6BF,KAAnC;AAEA,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,YAAY,GAAG;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,YAAzC,CAAH,GAAkE,EADjF,EAEC;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,SAAS,KAAKD,QAAd,IAA0BA,QAAQ,CAACE,MAAnC,GACDF,QAAQ,CAACG,GAAT,CAAcC,OAAO,IAAI,MAAC,OAAD;AAAS,IAAA,GAAG,EAAGA,OAAO,CAACC,IAAR,CAAaC,EAA5B;AAAiC,IAAA,OAAO,EAAGF,OAAO,CAACC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,CADC,GAEE,EAHL,CAFD,CADD;AAUA,CAd0B,CAA3B;;AAgBAR,QAAQ,CAACU,eAAT,GAA2B,gBAAgBC,OAAhB,EAA0B;AAEpD,MAAI;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AAAT,MAAsBF,OAA1B;AAEA,QAAMF,EAAE,GAAGI,IAAI,GAAGA,IAAI,CAACC,KAAL,CAAY,GAAZ,EAAkBC,GAAlB,EAAH,GAA6BJ,OAAO,CAACC,KAAR,CAAcH,EAA1D;AAEA,QAAMO,GAAG,GAAG,MAAMpB,MAAM,CAACgB,KAAP,CAAc;AAC/BA,IAAAA,KAAK,EAAEb,sBADwB;AAE/BkB,IAAAA,SAAS,EAAE;AAAER,MAAAA;AAAF;AAFoB,GAAd,CAAlB;AAKA,SAAO;AACNP,IAAAA,YAAY,EAAEc,GAAG,CAACE,IAAJ,CAASC,eAAT,CAAyBC,IADjC;AAENjB,IAAAA,QAAQ,EAAEa,GAAG,CAACE,IAAJ,CAASC,eAAT,CAAyBhB,QAAzB,CAAkCkB;AAFtC,GAAP;AAKA,CAhBD;;AAkBA,eAAerB,QAAf","sourcesContent":["import Layout from \"../components/Layout\";\nimport { withRouter } from 'next/router';\nimport client from \"../components/ApolloClient\";\nimport gql from 'graphql-tag';\nimport Product from \"../components/Product\";\n\nconst PRODUCT_BY_CATEGORY_ID = gql` query Product_Category( $id: ID ! ) {\n\t\t\tproductCategory( id: $id ) {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tproducts {\n\t\t\t\t\t\t\t  edges {\n\t\t\t\t\t\t\t    node {\n\t\t\t\t\t\t\t        id\n\t\t\t\t\t\t\t\t\tproductId\n\t\t\t\t\t\t\t\t\taverageRating\n\t\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\t\t\t\turi\n\t\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\t\tsrcSet\n\t\t\t\t\t\t\t\t\t\t\tsourceUrl\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\tprice\n\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t  }\n\t\t\t\t\t}\n\n\t\t\t}\n\t }`;\n\nconst Category = withRouter( props => {\n\n\tconst { categoryName, products } = props;\n\n\treturn (\n\t\t<Layout>\n\t\t\t{ categoryName ? <h3 className=\"product-container pl-5\">{ categoryName }</h3> : '' }\n\t\t\t<div className=\"product-container row\">\n\t\t\t\t{ undefined !== products && products.length ? (\n\t\t\t\t\tproducts.map( product => <Product key={ product.node.id } product={ product.node } /> )\n\t\t\t\t) : ''}\n\t\t\t</div>\n\t\t</Layout>\n\t)\n});\n\nCategory.getInitialProps = async function( context ) {\n\n\tlet { query: { slug } } = context;\n\n\tconst id = slug ? slug.split( '-' ).pop() : context.query.id;\n\n\tconst res = await client.query(({\n\t\tquery: PRODUCT_BY_CATEGORY_ID,\n\t\tvariables: { id }\n\t}));\n\n\treturn {\n\t\tcategoryName: res.data.productCategory.name,\n\t\tproducts: res.data.productCategory.products.edges\n\t}\n\n};\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}